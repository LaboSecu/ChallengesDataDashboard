{"remainingRequest":"/Users/ariagroult/dev/ChallengesDataDashboard/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ariagroult/dev/ChallengesDataDashboard/client/src/components/Board.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ariagroult/dev/ChallengesDataDashboard/client/src/components/Board.vue","mtime":1540400809380},{"path":"/Users/ariagroult/dev/ChallengesDataDashboard/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ariagroult/dev/ChallengesDataDashboard/client/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/ariagroult/dev/ChallengesDataDashboard/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from \"axios\"\nexport default {\n  data() {\n    return {\n        users : []\n    }\n  },\n  created(){\n    axios.get('/challenges')\n      .then((response) => {\n        this.users = response.data.data;\n        this.users.map((item) => {\n          item.name = item.firstName.charAt(0).toUpperCase() + item.firstName.slice(1) + \" \" + item.lastName.toUpperCase();\n          delete item.firstName;\n          delete item.lastName;\n        });\n      })\n      .catch(function (error) {\n        throw new Error(error);\n      });\n  },\n  methods: {\n    getChallengeStatus(challengePassed){\n      if(challengePassed === true) {return 'Passed'}\n      else{return 'Failed'}\n    }\n  }\n}\n",{"version":3,"sources":["Board.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Board.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <table class=\"table\">\n            <thead class=\"thead-dark\">\n                <tr>\n                    <th scope=\"col\">Email</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Last Try</th>\n                    <th scope=\"col\">Challenge Status</th>\n                </tr>\n            </thead>\n            <tbody>\n            <tr v-for=\"user in users\">\n                <td>{{user.email}}</td>\n                <td>{{user.name}}</td>\n                <td>{{user.date}}</td>\n                <td><span class=\"badge\" v-bind:class=\"{'badge-success' : user.challengePassed, 'badge-danger' : user.challengePassed === false }\">{{getChallengeStatus(user.challengePassed)}}</span></td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n</template>\n\n<script>\n  import axios from \"axios\"\n  export default {\n    data() {\n      return {\n          users : []\n      }\n    },\n    created(){\n      axios.get('/challenges')\n        .then((response) => {\n          this.users = response.data.data;\n          this.users.map((item) => {\n            item.name = item.firstName.charAt(0).toUpperCase() + item.firstName.slice(1) + \" \" + item.lastName.toUpperCase();\n            delete item.firstName;\n            delete item.lastName;\n          });\n        })\n        .catch(function (error) {\n          throw new Error(error);\n        });\n    },\n    methods: {\n      getChallengeStatus(challengePassed){\n        if(challengePassed === true) {return 'Passed'}\n        else{return 'Failed'}\n      }\n    }\n  }\n</script>\n"]}]}